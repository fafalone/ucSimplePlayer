[Description("ucSimplePlayer Demo Form")]
[FormDesignerId("EB7457EF-9650-4AA9-A5C5-79CB98B32DCE")]
[PredeclaredId]
Class Form1

    Private mFile As String
    Private mPlay As Boolean
    Private mNoUpdate As Boolean
    Private mDropScroll As Boolean
    Private bMute As Boolean
    
    #If TWINBASIC = 0 Then
    Private Enum SHACF
        SHACF_DEFAULT = &H00000000 ' Currently (SHACF_FILESYSTEM | SHACF_URLALL)
        SHACF_FILESYSTEM = &H00000001 ' This includes the File System as well as the rest of the shell (Desktop\My Computer\Control Panel\)
        SHACF_URLHISTORY = &H00000002 ' URLs in the User's History
        SHACF_URLMRU = &H00000004 ' URLs in the User's Recently Used list.
        SHACF_URLALL = &H00000006 ' (SHACF_URLHISTORY | SHACF_URLMRU)
        SHACF_USETAB = &H00000008 ' Use the tab to move thru the autocomplete possibilities instead of to the next dialog/window control.
        SHACF_FILESYS_ONLY = &H00000010 ' Don't AutoComplete non-File System items.
        SHACF_FILESYS_DIRS = &H00000020 ' Same as SHACF_FILESYS_ONLY except it only includes directories, UNC servers, and UNC server shares.
        SHACF_VIRTUAL_NAMESPACE = &H00000040 ' Also include the virtual namespace
        SHACF_AUTOSUGGEST_FORCE_ON = &H10000000 ' Ignore the registry default and force the feature on.
        SHACF_AUTOSUGGEST_FORCE_OFF = &H20000000 ' Ignore the registry default and force the feature off.
        SHACF_AUTOAPPEND_FORCE_ON = &H40000000 ' Ignore the registry default and force the feature on. (Also know as AutoComplete)
        SHACF_AUTOAPPEND_FORCE_OFF = &H80000000 ' Ignore the registry default and force the feature off. (Also know as AutoComplete)
    End Enum
    #If VBA7 Then
    Private Declare PtrSafe Function SHAutoComplete Lib "shlwapi" (ByVal hwndEdit As LongPtr, ByVal dwFlags As SHACF) As Long
    #Else
    Private Declare Function SHAutoComplete Lib "shlwapi" (ByVal hwndEdit As Long, ByVal dwFlags As SHACF) As Long  
    #End If
    #End If
    
    Private Sub Form_Load() Handles Form.Load
        SHAutoComplete Text1.hWnd, SHACF_FILESYSTEM
        Dim dwStyle As LongPtr
        dwStyle = GetWindowLong(Slider1.hWnd, GWL_STYLE)
        dwStyle = dwStyle Or TBS_DOWNISLEFT
        SetWindowLong Slider1.hWnd, GWL_STYLE, dwStyle
        dwStyle = GetWindowLong(Slider2.hWnd, GWL_STYLE)
        dwStyle = dwStyle Or TBS_DOWNISLEFT
        SetWindowLong Slider2.hWnd, GWL_STYLE, dwStyle
        'the above makes using the mousewheel much more natural
        'and matches how the control does it
    End Sub
    
    Private Sub Check1_Click() Handles Check1.Click
        ucSimplePlayer1.LoopPlayback = (Check1.Value = vbChecked)
    End Sub
    
    Private Sub Command1_Click() Handles Command1.Click
        Dim fod As IFileOpenDialog
        Set fod = New FileOpenDialog
        Dim lpAbsPath As LongPtr
        Dim lpPath As LongPtr
        Dim lpUrl As LongPtr
        Dim siRes As IShellItem
        Dim tFilt() As COMDLG_FILTERSPEC
        ReDim tFilt(1)
        tFilt(0).pszName = StrPtr("Common media files")
        tFilt(0).pszSpec = StrPtr("*.mp4; *.mkv; *.m2ts; *.avi; *.asf; *.hevc; *.wmv; *.wma; *.flac; *.mp3; *.m4a; *.m4v; *.mov; *.wav; *.3gp; *.3gpp; *.3gp2; *.3g2; *.aac; *.adts; *.sami; *.smi")
        tFilt(1).pszName = StrPtr("All Files")
        tFilt(1).pszSpec = StrPtr("*.*")
        With fod
            .SetTitle "Open media file..."
            .SetOptions FOS_PATHMUSTEXIST
            .SetFileTypes 2, VarPtr(tFilt(0))
            On Error Resume Next
            .Show Me.hWnd
            .GetResult siRes
            On Error GoTo 0
            If (siRes Is Nothing) = False Then
                'siRes.GetDisplayName SIGDN_DESKTOPABSOLUTEPARSING, lpAbsPath
                siRes.GetDisplayName SIGDN_URL, lpUrl
                siRes.GetDisplayName SIGDN_FILESYSPATH, lpPath
                mFile = LPWSTRtoStr(lpUrl)
                If lpPath Then
                    Text1.Text = LPWSTRtoStr(lpPath)
                Else
                    Text1.Text = mFile
                End If
                ucSimplePlayer1.PlayMediaFile mFile
            End If
            
        End With
        
    End Sub
    
    Private Sub Command2_Click() Handles Command2.Click
        ucSimplePlayer1.PlayMediaFile Text1.Text
    End Sub
    
    Public Function Time2String(ByVal curNanoSec As LongLong, Optional ByVal _
        strTimeFormat As String = "hh:mm:ss") As String

        On Error Resume Next

        Dim lngHour As Long
        Dim lngMinu As Long
        Dim dblSeco As Double

        dblSeco = CDbl(curNanoSec / 10000000)

        lngHour = dblSeco \ 3600
        dblSeco = dblSeco Mod 3600
        lngMinu = dblSeco \ 60
        dblSeco = dblSeco Mod 60

        Time2String = Format$(TimeSerial(lngHour, lngMinu, dblSeco), strTimeFormat)

    End Function
    Public Function TimeSec2String(ByVal dblSeco As Double, Optional ByVal _
        strTimeFormat As String = "hh:mm:ss") As String

        On Error Resume Next

        Dim lngHour As Long
        Dim lngMinu As Long
 

        lngHour = dblSeco \ 3600
        dblSeco = dblSeco Mod 3600
        lngMinu = dblSeco \ 60
        dblSeco = dblSeco Mod 60

        TimeSec2String = Format$(TimeSerial(lngHour, lngMinu, dblSeco), strTimeFormat)

    End Function
 
    Private Sub ucSimplePlayer1_PlaybackStart(ByVal cyDuration As LongLong) Handles ucSimplePlayer1.PlaybackStart
        Label4.Caption = Time2String(cyDuration)
        Dim nSec As LongLong
        nSec = cyDuration / 10000000
        If nSec < 1 Then nSec = 1
        mPlay = True
        If bMute Then
            ucSimplePlayer1.Muted = True
        Else
           ucSimplePlayer1.Muted = False
        End If
        Slider1.Value = 0
        ' Debug.Print "Set Slider1.Value=0 in PlaybackStart"
        Slider1.Max = CLng(nSec)
        Slider1.TickFrequency = CLng(nSec) \ 10
        Slider1.LargeChange = CLng(nSec) \ 10
        Timer1.Interval = 250
        Timer1.Enabled = True
        ucSimplePlayer1.Volume = Slider2.Value / 100
    End Sub
    
    Private Sub Command3_Click() Handles Command3.Click
        If ucSimplePlayer1.Paused = True Then
            ucSimplePlayer1.Paused = False
        Else
            ucSimplePlayer1.Paused = True
        End If
    End Sub
    
    Private Sub Command4_Click() Handles Command4.Click
        Timer1.Enabled = False
        mPlay = False
        ucSimplePlayer1.StopPlayback
    End Sub
    
    Private Sub Timer1_Timer() Handles Timer1.Timer
        Dim nSec As Currency
        nSec = ucSimplePlayer1.Position / 1000
        If mNoUpdate = False Then Slider1.Value = nSec
        Label1.Caption = TimeSec2String(nSec)
    End Sub
    
    Private Sub Slider1_Click() Handles Slider1.Click
        If mPlay Then
            Debug.Print "SetPos Click"
            ucSimplePlayer1.Position = CCur(Slider1.Value) * 1000
            mDropScroll = True
        End If
    End Sub
    Private Sub Slider1_Scroll() Handles Slider1.Scroll
        If mPlay Then
            If mDropScroll Then
                mDropScroll = False
            Else
                If mNoUpdate = False Then
                    Debug.Print "SetPos Scroll"
                    ucSimplePlayer1.Position = CCur(Slider1.Value) * 1000
                End If
            End If
        End If
    End Sub
    Private Sub Slider1_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single) Handles Slider1.MouseDown
        mNoUpdate = True
    End Sub
    Private Sub Slider1_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single) Handles Slider1.MouseUp
        mNoUpdate = False
    End Sub
    
    Private Sub Slider2_Change() Handles Slider2.Change
        ucSimplePlayer1.Volume = Slider2.Value / 100
    End Sub
    Private Sub Slider2_Scroll() Handles Slider2.Scroll
        ucSimplePlayer1.Volume = Slider2.Value / 100
    End Sub
    Private Sub Slider2_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single) Handles Slider2.MouseMove
        If Button = 1 Then
            ucSimplePlayer1.Volume = Slider2.Value / 100
        End If
    End Sub
    
       
    
    Private Sub Command5_Click() Handles Command5.Click
        If ucSimplePlayer1.Rate > 0.24 Then
            ucSimplePlayer1.Rate = ucSimplePlayer1.Rate - 0.25
        End If
    End Sub
    
    Private Sub Command6_Click() Handles Command6.Click
        ucSimplePlayer1.Rate = ucSimplePlayer1.Rate + 0.25
    End Sub
    
    Private Sub Command7_Click() Handles Command7.Click
        ucSimplePlayer1.FrameStep
    End Sub
    
    Private Sub Image1_Click() Handles Image1.Click
        If ucSimplePlayer1.Muted Then
            ucSimplePlayer1.Muted = False
            Image1.Picture = Image3.Picture
            bMute = False
        Else
            ucSimplePlayer1.Muted = True
            Image1.Picture = Image2.Picture
            bMute = True
        End If
    End Sub
 
    Private Sub ucSimplePlayer1_PlayerClick(ByVal Button As Long) Handles ucSimplePlayer1.PlayerClick
        If Button = 2 Then
            Dim nVid As Long, nAud As Long
            Dim sVidL() As String, sVidN() As String
            Dim sAudL() As String, sAudN() As String
            ucSimplePlayer1.GetVideoStreams sVidN, sVidL, nVid
            ucSimplePlayer1.GetAudioStreams sAudN, sAudL, nAud
            Dim hMenu As LongPtr
            Dim hSubV As LongPtr, hSubA As LongPtr
            hMenu = CreatePopupMenu()
            hSubV = CreateMenu()
            hSubA = CreateMenu()
            Dim i As Long
            Dim mii As MENUITEMINFO
            mii.cbSize = LenB(mii)
            With mii
                .fMask = MIIM_ID Or MIIM_STRING Or MIIM_SUBMENU
                If nVid = 0 Then
                    .fMask = .fMask Or MIIM_STATE
                    .fState = MFS_DISABLED
                End If
                .wID = 1000
                .dwTypeData = StrPtr("Video tracks")
                .cch = Len("Video tracks")
                .hSubMenu = hSubV
                Call InsertMenuItem(hMenu, 0, True, mii)
                
                .fMask = MIIM_ID Or MIIM_STRING Or MIIM_SUBMENU
                If nAud = 0 Then
                    .fMask = .fMask Or MIIM_STATE
                    .fState = MFS_DISABLED
                End If
                .wID = 1001
                .dwTypeData = StrPtr("Audio tracks")
                .cch = Len("Audio tracks")
                .hSubMenu = hSubA
                Call InsertMenuItem(hMenu, 1, True, mii)
                
                .fMask = MIIM_ID Or MIIM_TYPE
                .fType = MFT_SEPARATOR
                .wID = 0
                Call InsertMenuItem(hMenu, 2, True, mii)
                
                .fMask = MIIM_ID Or MIIM_STRING
                .wID = 1003
                .dwTypeData = StrPtr("Lock aspect ratio")
                .cch = Len("Lock aspect ratio")
                If ucSimplePlayer1.PreserveAspectRatio Then
                    .fMask = .fMask Or MIIM_STATE
                    .fState = MFS_CHECKED
                End If
                Call InsertMenuItem(hMenu, 3, True, mii)
                
                .fMask = MIIM_ID Or MIIM_STRING
                .wID = 1002
                If ucSimplePlayer1.Fullscreen Then
                    .dwTypeData = StrPtr("Exit fullscreen")
                    .cch = Len("Exit fullscreen")
                Else
                    .dwTypeData = StrPtr("Enter fullscreen")
                    .cch = Len("Enter fullscreen")
                End If
                Call InsertMenuItem(hMenu, 4, True, mii)
            End With
            
            Dim sLbl As String
            'Populate track menus
            If nVid > 0 Then
                For i = 0 To nVid - 1
                    With mii
                        .fMask = MIIM_ID Or MIIM_STRING
                        .wID = 2001 + i
                        sLbl = "(" & CStr(i + 1) & ") [" & IIf(sVidL(i) = "", "unk", sVidL(i)) & "]: " & IIf(sVidN(i) = "", "Video track #" & CStr(i + 1), sVidN(i))
                        .dwTypeData = StrPtr(sLbl)
                        .cch = Len(sLbl)

                        Call InsertMenuItem(hSubV, i, True, mii)
                    End With
                Next
                CheckMenuRadioItem hSubV, 0, i, ucSimplePlayer1.ActiveVideoStream - 1, MF_BYPOSITION
            End If
            If nAud	> 0 Then
                For i = 0 To nAud - 1
                    With mii
                        .fMask = MIIM_ID Or MIIM_STRING
                        .wID = 9001 + i
                        sLbl = "(" & CStr(i + 1) & ") [" & IIf(sAudL(i) = "", "unk", sAudL(i)) & "]: " & IIf(sAudN(i) = "", "Audio track #" & CStr(i + 1), sAudN(i))
                        .dwTypeData = StrPtr(sLbl)
                        .cch = Len(sLbl)

                        Call InsertMenuItem(hSubA, i, True, mii)
                    End With
                Next
                CheckMenuRadioItem hSubA, 0, i, ucSimplePlayer1.ActiveAudioStream - 1, MF_BYPOSITION
            End If
            
            Dim pt As POINT
            GetCursorPos pt
            Dim idCmd As Long
            Dim n As Long
            idCmd = TrackPopupMenu(hMenu, TPM_LEFTBUTTON Or TPM_RIGHTBUTTON Or TPM_LEFTALIGN Or TPM_TOPALIGN Or TPM_HORIZONTAL Or TPM_RETURNCMD, pt.x, pt.y, 0, Me.hWnd, 0)
            
            'Be careful adding commands with how this is processed
            Select Case idCmd
                Case 1002
                    If ucSimplePlayer1.Fullscreen Then
                        ucSimplePlayer1.Fullscreen = False
                    Else
                        ucSimplePlayer1.Fullscreen = True
                    End If
                    
                Case 1003
                    If ucSimplePlayer1.PreserveAspectRatio Then
                        ucSimplePlayer1.PreserveAspectRatio = False
                    Else
                        ucSimplePlayer1.PreserveAspectRatio = True
                    End If
                    
                Case Is > 9000 'audio
                    n = idCmd - 9000
                    If n <> ucSimplePlayer1.ActiveAudioStream Then
                        ucSimplePlayer1.ActiveAudioStream = n
                    End If
                    
                Case Is > 2000 'video
                    n = idCmd - 2000
                    If n <> ucSimplePlayer1.ActiveVideoStream Then
                        ucSimplePlayer1.ActiveVideoStream = n
                    End If
            End Select
            
        End If
    End Sub
    
    Private Sub ucSimplePlayer1_PlayerWheelScroll(ByVal delta As Integer, ByVal keyState As Integer) Handles ucSimplePlayer1.PlayerWheelScroll
        If delta < 0 Then
            If Slider2.Value >= 5 Then
                Slider2.Value = Slider2.Value - 5
            ElseIf Slider2.Value > 0 Then '1-4, set to 0
                Slider2.Value = 0
            End If
        Else
            If Slider2.Value <= 95 Then
                Slider2.Value = Slider2.Value + 5
            ElseIf Slider2.Value > 95 Then '96-99, set to 100
                Slider2.Value = 100
            End If
        End If
        ucSimplePlayer1.Volume = Slider2.Value / 100
    End Sub
    
 
End Class